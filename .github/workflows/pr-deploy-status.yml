name: Comment Deploy Status on PR

on:
  workflow_call:
    inputs:
      pr-number:
        required: true
        type: string
      head-sha:
        required: true
        type: string
      run-id:
        required: true
        type: string
      run-number:
        required: true
        type: string
      status:
        required: true
        type: string
      conclusion:
        required: false
        type: string

permissions:
  pull-requests: write

jobs:
  pr-comment:
    runs-on: ubuntu-latest

    steps:
      - name: Find existing comment
        id: find
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ inputs.pr-number }}
          comment-author: github-actions[bot]
          body-includes: '<!-- deploy-status -->'

      - name: Get current UTC timestamp
        id: timestamp
        run: echo "build_timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Generate comment body
        id: body
        env:
          STATUS: ${{ inputs.status }}
          CONCLUSION: ${{ inputs.conclusion }}
          PR: ${{ inputs.pr-number }}
          SHA: ${{ inputs.head-sha }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ inputs.run-id }}
          RUN_NUM: ${{ inputs.run-number }}
          BUILD_TIMESTAMP: ${{ steps.timestamp.outputs.build_timestamp }}
        run: |
          DOMAIN="https://explorer-artifacts.decentraland.zone"
          REPO_NAME=$(echo "$REPO" | cut -d'/' -f2)
          PATH="dry-run-${REPO_NAME}/pr-${PR}/run-${RUN_NUM}-${RUN_ID}"

          if [[ "$STATUS" == "requested" ]]; then
            {
              echo "body<<EOF"
              echo "<!-- deploy-status -->"
              echo '![badge]  <img src="https://ui.decentraland.org/decentraland_256x256.png" width="30">'
              echo ""
              echo "New build in progress, come back later!"
              echo ""
              echo "[badge]: https://img.shields.io/badge/Build-Pending!-ffff00?logo=github&style=for-the-badge"
              echo "EOF"
            } >> $GITHUB_OUTPUT
            exit 0
          fi

          if [[ "$CONCLUSION" == "failure" ]]; then
            {
              echo "body<<EOF"
              echo "<!-- deploy-status -->"
              echo '![badge]  <img src="https://ui.decentraland.org/decentraland_256x256.png" width="30">'
              echo ""
              echo "Build failed! Check the logs to see what went wrong."
              echo ""
              echo "[badge]: https://img.shields.io/badge/Build-Failed!-ff0000?logo=github&style=for-the-badge"
              echo "EOF"
            } >> $GITHUB_OUTPUT
            exit 0
          fi

          if [[ "$CONCLUSION" == "success" ]]; then
            WIN_URL="${DOMAIN}/${PATH}/Decentraland_x64-setup.exe"
            MAC_URL="${DOMAIN}/${PATH}/Decentraland_aarch64.dmg"

            {
              echo "body<<EOF"
              echo "<!-- deploy-status -->"
              echo '![badge]  <img src="https://ui.decentraland.org/decentraland_256x256.png" width="30">'
              echo ""
              echo "Windows and Mac build successful in **Launcher Rust**!! You can find a link to the downloadable artifact below."
              echo ""
              echo "| Name                | Link                      |"
              echo "| ------------------- | ------------------------- |"
              echo "| Commit              | ${SHA}                    |"
              echo "| Download Windows S3 | [Decentraland_x64-setup.exe](${WIN_URL}) |"
              echo "| Download Mac S3     | [Decentraland_aarch64.dmg](${MAC_URL})   |"
              echo "| Built on            | ${BUILD_TIMESTAMP}        |"
              echo ""
              echo "[badge]: https://img.shields.io/badge/Build-Success!-3fb950?logo=github&style=for-the-badge"
              echo "EOF"
            } >> $GITHUB_OUTPUT
            exit 0
          fi

      - name: Create or update PR comment
        if: steps.body.outputs.body != ''
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find.outputs.comment-id }}
          issue-number: ${{ inputs.pr-number }}
          body: ${{ steps.body.outputs.body }}
          edit-mode: replace
