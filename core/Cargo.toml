[package]
name = "dcl-launcher-core"
version = "1.9.5"
edition = "2024"

[lib]
name = "dcl_launcher_core"
path = "src/lib.rs"

[[bin]]
name = "dcl_launcher_core"
path = "src/main.rs"

[profile.dev]
overflow-checks = true
incremental = true # Compile your binary in smaller steps.

[profile.release]
overflow-checks = true
codegen-units = 1 # Allows LLVM to perform better optimization.
lto = true # Enables link-time-optimizations.
opt-level = "s" # Prioritizes small binary size. Use `3` if you prefer speed.
panic = "abort" # Higher performance by disabling panic handlers.
strip = true # Ensures debug symbols are removed.

[dependencies]
# fix for the issue: https://github.com/ebarnard/rust-plist/issues/151
deranged = "=0.4.0"
plist = "=1.7.0"

serde = { version = "1", features = ["derive"] }
serde_json = "1"
reqwest = { version = "0.12", default-features = false, features = ["json", "rustls-tls", "stream"] }
regex = "1.11.1"
url = "2.5.4"
anyhow = "1.0.97"

futures-util = "0.3.14"
tokio = { version = "1.44.1", features = ["full"] }
tokio-util = "0.7.15"

thiserror = "2"

semver = "1.0.26"

sysinfo = "0.35.2"

dirs = "5.0"
tar = "0.4.44"
zip = "2.5.0"
flate2 = "1.1.0"

time = "0.3.41"

log = "0.4"
fern = "0.7.1"
pretty_env_logger = "0.5.0"
humantime = "2.2.0"

segment = { version = "0.2.6", default-features = false, features = ["rustls-tls"] }
uuid = { version = "1.16.0", features = ["v4"] }

nix =  { version = "0.29.0", features = ["process"] }

sentry = { version = "0.37.0", features = ["anyhow", "log", "reqwest", "rustls", "backtrace"] }
sentry-anyhow = { version = "0.37.0" }
sentry-log = "0.37.0"
sentry-types = "0.37.0"

get_if_addrs = "0.5.3"

[target.'cfg(target_os = "macos")'.dependencies]
system-configuration = "0.6.1"
rusqlite = { version = "0.37.0" }

[target.'cfg(target_os = "windows")'.dependencies]
rusqlite = { version = "0.37.0", features = ["bundled"] }
windows-sys = { version = "0.59", features = [
  "Win32_System_Threading",
] }
windows = { version = "0.61.3", features = [
  "Win32_NetworkManagement_IpHelper",
  "Win32_Networking_WinSock",
] }
